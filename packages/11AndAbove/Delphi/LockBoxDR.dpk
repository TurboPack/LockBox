(* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is TurboPower LockBox
 *
 * The Initial Developer of the Original Code is
 * TurboPower Software
 *
 * Portions created by the Initial Developer are Copyright (C) 1997-2002
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *
 * ***** END LICENSE BLOCK ***** *)
package LockBoxDR;

{$R *.res}
{$IFDEF IMPLICITBUILDING This IFDEF should not be used by users}
{$ALIGN 8}
{$ASSERTIONS ON}
{$BOOLEVAL OFF}
{$DEBUGINFO OFF}
{$EXTENDEDSYNTAX ON}
{$IMPORTEDDATA ON}
{$IOCHECKS ON}
{$LOCALSYMBOLS OFF}
{$LONGSTRINGS ON}
{$OPENSTRINGS ON}
{$OPTIMIZATION ON}
{$OVERFLOWCHECKS OFF}
{$RANGECHECKS OFF}
{$REFERENCEINFO OFF}
{$SAFEDIVIDE OFF}
{$STACKFRAMES OFF}
{$TYPEDADDRESS OFF}
{$VARSTRINGCHECKS ON}
{$WRITEABLECONST OFF}
{$MINENUMSIZE 1}
{$IMAGEBASE $400000}
{$DEFINE RELEASE}
{$ENDIF IMPLICITBUILDING}
{$DESCRIPTION 'TurboPack LockBox Delphi runtime package'}
{$LIBSUFFIX AUTO}
{$RUNONLY}
{$IMPLICITBUILD OFF}

requires
  rtl;

contains
  LbAsym in '..\..\..\source\LbAsym.pas',
  LbBigInt in '..\..\..\source\LbBigInt.pas',
  LbBytes in '..\..\..\source\LbBytes.pas',
  LbCipher in '..\..\..\source\LbCipher.pas',
  LbClass in '..\..\..\source\LbClass.pas',
  LbConst in '..\..\..\source\LbConst.pas',
  LbDSA in '..\..\..\source\LbDSA.pas',
  LbProc in '..\..\..\source\LbProc.pas',
  LbRandom in '..\..\..\source\LbRandom.pas',
  LbRSA in '..\..\..\source\LbRSA.pas',
  LbUtils in '..\..\..\source\LbUtils.pas';

end.
